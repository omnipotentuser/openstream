function Conference(){console.log("conference ready");var conferenceViews=new ConferenceViews;var rtc_engine=null;this.leave=function(destroyCallback,next){if(rtc_engine){rtc_engine.leave();rtc_engine=null}destroyCallback(next)}}function ConferenceViews(){}var RTCPeerConnection=null;var getUserMedia=null;var attachMediaStream=null;var reattachMediaStream=null;var webrtcDetectedBrowser=null;var webrtcDetectedVersion=null;function trace(text){if(text[text.length-1]=="\n"){text=text.substring(0,text.length-1)}console.log((performance.now()/1e3).toFixed(3)+": "+text)}if(navigator.mozGetUserMedia){console.log("This appears to be Firefox");webrtcDetectedBrowser="firefox";webrtcDetectedVersion=parseInt(navigator.userAgent.match(/Firefox\/([0-9]+)\./)[1]);RTCPeerConnection=mozRTCPeerConnection;RTCSessionDescription=mozRTCSessionDescription;RTCIceCandidate=mozRTCIceCandidate;getUserMedia=navigator.mozGetUserMedia.bind(navigator);createIceServer=function(url,username,password){var iceServer=null;var url_parts=url.split(":");if(url_parts[0].indexOf("stun")===0){iceServer={url:url}}else if(url_parts[0].indexOf("turn")===0&&(url.indexOf("transport=udp")!==-1||url.indexOf("?transport")===-1)){var turn_url_parts=url.split("?");iceServer={url:turn_url_parts[0],credential:password,username:username}}return iceServer};attachMediaStream=function(element,stream){console.log("Attaching media stream");element.mozSrcObject=stream;element.play()};reattachMediaStream=function(to,from){console.log("Reattaching media stream");to.mozSrcObject=from.mozSrcObject;to.play()};MediaStream.prototype.getVideoTracks=function(){return[]};MediaStream.prototype.getAudioTracks=function(){return[]}}else if(navigator.webkitGetUserMedia){console.log("This appears to be Chrome");webrtcDetectedBrowser="chrome";webrtcDetectedVersion=parseInt(navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./)[2]);createIceServer=function(url,username,password){var iceServer=null;var url_parts=url.split(":");if(url_parts[0].indexOf("stun")===0){iceServer={url:url}}else if(url_parts[0].indexOf("turn")===0){if(webrtcDetectedVersion<28){var url_turn_parts=url.split("turn:");iceServer={url:"turn:"+username+"@"+url_turn_parts[1],credential:password}}else{iceServer={url:url,credential:password,username:username}}}return iceServer};RTCPeerConnection=webkitRTCPeerConnection;getUserMedia=navigator.webkitGetUserMedia.bind(navigator);attachMediaStream=function(element,stream){if(typeof element.srcObject!=="undefined"){element.srcObject=stream}else if(typeof element.mozSrcObject!=="undefined"){element.mozSrcObject=stream}else if(typeof element.src!=="undefined"){element.src=URL.createObjectURL(stream)}else{console.log("Error attaching stream to element.")}};reattachMediaStream=function(to,from){to.src=from.src};if(!webkitMediaStream.prototype.getVideoTracks){webkitMediaStream.prototype.getVideoTracks=function(){return this.videoTracks};webkitMediaStream.prototype.getAudioTracks=function(){return this.audioTracks}}if(!webkitRTCPeerConnection.prototype.getLocalStreams){webkitRTCPeerConnection.prototype.getLocalStreams=function(){return this.localStreams};webkitRTCPeerConnection.prototype.getRemoteStreams=function(){return this.remoteStreams}}}else{console.log("Browser does not appear to be WebRTC-capable")}function logError(error){console.log("error: "+error.name)}function Peer(p_socket,p_id,p_roomName,iceConfig){var pc=null,peerid=p_id,onByteChar=null,dc=null,socket=p_socket,localStream=null,roomName=p_roomName,ice_config={iceServers:[]},credentials=[];if(iceConfig.length>0){credentials=iceConfig}else if(navigator.mozGetUserMedia){credentials=[{url:"stun:stun.vline.com"}]}else{credentials=[{url:"stun:stun.1.google.com:19302"},{url:"turn:turn.bistri.com:80",credential:"homeo",username:"homeo"}]}this.getid=function(){return peerid};this.hasPC=function(){return pc?true:false};this.close=function(){if(pc)pc.close();if(dc)dc.close()};this.buildClient=function(stream,bytecharCallback,requestType){for(var i=0;i<credentials.length;i++){var iceServer={};iceServer=createIceServer(credentials[i].url,credentials[i].username,credentials[i].credential);ice_config.iceServers.push(iceServer)}pc=new RTCPeerConnection(ice_config);pc.onaddstream=onAddStream;pc.onicecandidate=onIceCandidate;pc.oniceconnectionstatechange=onIceConnectionStateChange;pc.onnegotiationneeded=onNegotiationNeeded;pc.onremovestream=onRemoveStream;pc.onsignalingstatechange=onSignalingStateChange;if(requestType==="offer"){dc=pc.createDataChannel("chat".dataChannelOptions);dc.onerror=onDCError;dc.onmessage=onDCMessage;dc.onopen=onDCOpen;dc.onclose=onDCClose;console.log("readyState",dc.readyState)}else{pc.ondatachannel=onCreateDataChannel;console.log("DataChannel - listening")}onByteChar=bytecharCallback;if(stream){localStream=stream;pc.addStream(localStream)}else{alert("Media device is not detected.")}};var onDCError=function(err){console.log("data channel error:",err)};var onDCMessage=function(event){if(onByteChar&&peerid){var message={from_id:peerid,code:event.data};onByteChar(message)}};var onDCOpen=function(event){console.log("the data channel is opened")};var onDCClose=function(){console.log("the data channel is closed")};var dataChannelOptions={};var onAddStream=function(evt){console.log("onAddStream "+evt.stream.id);$("#"+peerid).attr("src",window.URL.createObjectURL(evt.stream))};var onIceCandidate=function(evt){if(evt.candidate){var message={room:roomName,candidate:evt.candidate,to_id:peerid};socket.emit("candidate",message)}};var onIceConnectionStateChange=function(){console.log("onIceConnectionStateChange state: "+pc.iceConnectionState)};var onNegotiationNeeded=function(){console.log("onNegotiationNeeded")};var onRemoveStream=function(evt){console.log("onRemoveStream "+evt)};var onSignalingStateChange=function(){console.log("onSignalingStateChange: "+pc.signalingState)};this.addIceCandidate=function(p_candidate){if(pc){pc.addIceCandidate(new RTCIceCandidate(p_candidate))}else{console.log("No peer candidate instance")}};var localDescCreated=function(desc){if(pc.signalingState==="closed")return;pc.setLocalDescription(desc,function(){var message={room:roomName,sdp:pc.localDescription,to_id:peerid};socket.emit("sdp",message)},logError)};var onCreateDataChannel=function(event){if(dc&&dc.readyState!=="closed"){console.log("dataChannel channel already created")}else{dc=event.channel;dc.onmessage=onDCMessage;dc.onopen=onDCOpen;dc.onclose=onDCClose;console.log("DataChannel remote connection status",dc.readyState)}};this.peerCreateOffer=function(){console.log("peerCreateOffer called");pc.createOffer(localDescCreated,logError)};this.setRemoteDescription=function(p_remote_sdp){console.log("setRemoteDescription signalingState "+pc.signalingState);pc.setRemoteDescription(new RTCSessionDescription(p_remote_sdp),function(){if(pc.remoteDescription.type==="offer"){console.log("createAnswer to remote sdp offer");pc.createAnswer(localDescCreated,logError)}},logError)};this.sendData=function(byteChar){if(dc&&dc.readyState.toLowerCase()==="open"){dc.send(byteChar)}else{console.log("DataChannel not ready")}}}function RTCEngine(){var peers=[],peer=null,socket=null,roomName=null,localStream=null,localId=null,iceConfig=[],appCB=function(){};var shiftKeyCode={192:"126",49:"33",50:"64",51:"35",52:"36",53:"37",54:"94",55:"38",56:"42",57:"40",48:"41",189:"95",187:"43",219:"123",221:"125",220:"124",186:"58",222:"34",188:"60",190:"62",191:"63"};var specialCharCode={8:"8",13:"13",32:"32",186:"58",187:"61",188:"44",189:"45",190:"46",191:"47",192:"96",219:"91",220:"92",221:"93",222:"39"};function startMedia(){var media_constraints={video:{mandatory:{}},audio:true};getUserMedia(media_constraints,function(stream){localStream=stream;var video=$("#local-video");video.attr("src",window.URL.createObjectURL(localStream));localStream.onloadedmetadata=function(e){console.log("onloadedmetadata called, properties:");for(var prop in e){console.log(prop+" in "+e[prop])}};console.log("joining",roomName);socket.emit("join",{room:roomName})},logError)}function stopMedia(){if(localStream){localStream.stop()}while(peers.length>0){peer=peers.pop();peer.close()}if(socket){socket.emit("exit")}}function sendChar(code,isrelay){if(roomName){var message={room:roomName,code:code};if(isrelay){socket.emit("byteChar",message)}else{for(var i=0;i<peers.length;i++){peers[i].sendData(code)}}}}function sendString(word,isrelay){if(roomName){var message={room:roomName,code:word};if(isrelay){socket.emit("byteChar",message)}else{for(var i=0;i<peers.length;i++){peers[i].sendData(word)}}}}function handleJoinRoom(socket,callback){if(typeof callback==="undefined")callback=function(){};socket.on("id",function(message){localId=message.yourId;console.log("localId: "+localId);callback("id",{id:localId})})}function handleCreatePeers(socket,callback){if(typeof callback==="undefined")callback=function(){};socket.on("createPeers",function(message){console.log("socket received createPeers signal");var users=message.users;if(users.length>0)createPeers(users,callback)})}function createPeers(users,callback){var pid=users.shift();callback("create",{id:pid});var peer=new Peer(socket,pid,roomName,iceConfig);peer.buildClient(localStream,handleByteChar,"answer");peers.push(peer);if(users.length>0){createPeers(users,callback)}}function handleCreateOffer(socket,callback){if(typeof callback==="undefined")callback=function(){};socket.on("createOffer",function(message){var peer=new Peer(socket,message.id,roomName,iceConfig);peer.buildClient(localStream,handleByteChar,"offer");peers.push(peer);callback("create",{id:message.id});peer.peerCreateOffer()})}function handleIceCandidate(socket){socket.on("candidate",function(message){for(var i=0;i<peers.length;i++){if(peers[i].getid()===message.from_id){if(!peers[i].hasPC()){console.log("ICE Candidate received: PC not ready. Building.");peers[i].buildClient(localStream,handleByteChar,"answer")}peers[i].addIceCandidate(message.candidate)}}})}function handleSetRemoteDescription(socket){socket.on("sdp",function(message){console.log("sdp offer received");for(var i=0;i<peers.length;i++){if(peers[i].getid()===message.from_id){if(!peers[i].hasPC()){console.log("SDP received: PC not ready. Building.");peers[i].buildClient(localStream,handleByteChar,"answer")}peers[i].setRemoteDescription(message.sdp)}}})}function handleClientDisconnected(socket,callback){if(typeof callback==="undefined")callback=function(){};socket.on("leave",function(from_id){console.log("handleClientDisconnected",from_id);for(var i=0;i<peers.length;i++){if(peers[i].getid()===from_id){if(peers[i].hasPC()){peers.splice(i,1);callback("peerDisconnect",{id:from_id});return}}}})}function handleSysCode(socket,callback){if(typeof callback==="undefined")callback=function(){};socket.on("error",function(message){var errcode;console.log("handleSysCode",message);switch(message.error){case"room full":errcode="Room is full";break;default:errcode="Unknown Error";break}callback("error",{msg:errcode})});socket.on("info",function(message){var code;switch(message.info){case"room empty":code="Room is empty";break;default:code="Unknown Error";break}callback("info",{msg:code})})}function handleByteChar(message){for(var i=0;i<peers.length;i++){if(peers[i].getid()===message.from_id){if(!peers[i].hasPC()){console.log("Message received: PC not ready.")}else{appCB("readbytechar",message)}return{}}}}function handleReceiveCode(socket,callback){if(typeof callback==="undefined")callback=function(){};socket.on("byteChar",function(message){for(var i=0;i<peers.length;i++){if(peers[i].getid()===message.from_id){if(!peers[i].hasPC()){console.log("Message received: PC not ready.")}else{callback("readbytechar",message)}return{}}}})}var connect=function(room,callback){roomName=room;appCB=callback;socket=io("/",{forceNew:true});console.log("socket connecting");socket.on("connect",function(){handleJoinRoom(socket,callback);handleCreatePeers(socket,callback);handleCreateOffer(socket,callback);handleIceCandidate(socket);handleSetRemoteDescription(socket);handleReceiveCode(socket,callback);handleClientDisconnected(socket,callback);handleSysCode(socket,callback);callback("connected")})};function S4(){return((1+Math.random())*65536|0).toString(16).substring(1)}function generateID(){return S4()+S4()+"-"+S4()+"-"+S4()+"-"+S4()+"-"+S4()+S4()+S4()}function getURL(){var pathArray=window.location.href.split("/");var protocol=pathArray[0];var host=pathArray[2];var url=protocol+"//"+host;for(var i=3;i<pathArray.length;i++){url+="/"+pathArray[i]}return url}function updateIce(ice){if(ice.length>0){iceConfig=ice}}return{updateIce:updateIce,connect:connect,join:startMedia,leave:stopMedia,sendChar:sendChar,sendString:sendString}}function Hallway(){var rtc_engine=new RTCEngine;var hallwayViews=new HallwayViews;var localId=null;var roomName="";var $input=$("#roomnameinput");var joinRoomBtn=$("#joinroombtn");var randGenBtn=$("#randomgeneratorbtn");$.post("https://api.xirsys.com/getIceServers",{ident:"openhack",secret:"03150bbb-a1e7-49ff-862b-ab28688111a3",domain:"www.openhack.net",application:"default",room:"default",secure:"1"},function(data,status){var icedata=JSON.parse(data);if(status==="success"){console.log("post success");rtc_engine.updateIce(icedata.d.iceServers)}});var handleSocketEvents=function(signaler,data){if(signaler){var pid="";switch(signaler){case"connected":console.log("rtc engine connected");rtc_engine.join();break;case"id":localId=data.id;break;case"create":pid=data.id;console.log("creating new media element",pid);hallwayViews.appendPeerMedia(pid);break;case"peerDisconnect":pid=data.id;hallwayViews.deletePeerMedia(data.id);break;case"readbytechar":hallwayViews.updateTextArea(data.from_id,data.code);break;case"info":console.log(data.msg);break;case"error":console.log(data.msg);break;default:break}}};var handleJoinBtn=function(event){if(roomName===""){roomName=$input.val()}if(roomName===""){alert("Cannot have empty name")}else{event.preventDefault();hallwayViews.openMediaViews();(function(room,engine){console.log("starting rtc engine");engine.connect(room,handleSocketEvents)})(roomName,rtc_engine);hallwayViews.updateTitle(roomName);window.history.replaceState({},"OpenStream "+roomName,"#"+roomName);joinRoomBtn.unbind("click",handleJoinBtn);randGenBtn.unbind("click",handleRandGenBtn)}};this.leave=function(destroyCallback,next){$input.val("");joinRoomBtn.unbind("click",handleJoinBtn);randGenBtn.unbind("click",handleRandGenBtn);rtc_engine.leave();hallwayViews.closeMediaViews(destroyCallback,next);hallwayViews=null;rtc_engine=null};var S4=function(){return((1+Math.random())*65536|0).toString(16).substring(1)};var generateID=function(){return S4()+S4()+"-"+S4()+"-"+S4()+"-"+S4()+"-"+S4()+S4()+S4()};var handleRandGenBtn=function(event){$input.val(generateID());joinRoomBtn.trigger("click")};joinRoomBtn.bind("click",handleJoinBtn);randGenBtn.bind("click",handleRandGenBtn);hallwayViews.setListeners(rtc_engine);(function queryUrl(){var hashurl=window.location.hash;var hashpos=hashurl.lastIndexOf("#");if(hashpos!==-1){hashurl=hashurl.substring(hashpos+1)}if(hashpos===-1){roomName=""}else if(hashurl.length>0){roomName=hashurl}else{roomName=""}console.log("roomName",roomName);if(roomName!==""){joinRoomBtn.trigger("click")}})()}function HallwayViews(){var isrelay=false;var shiftKeyCode={192:"126",49:"33",50:"64",51:"35",52:"36",53:"37",54:"94",55:"38",56:"42",57:"40",48:"41",189:"95",187:"43",219:"123",221:"125",220:"124",186:"58",222:"34",188:"60",190:"62",191:"63"};var specialCharCode={8:"8",13:"13",32:"32",186:"58",187:"61",188:"44",189:"45",190:"46",191:"47",192:"96",219:"91",220:"92",221:"93",222:"39"};var usewebsocket=function(e){e.preventDefault();var $lta=$("#local-ta");if($(".hallway-input-checkbox-wsmode").is(":checked")){$lta.val($lta.val()+"\nDataChannel disabled, using WebSocket instead.\n");isrelay=true}else{$lta.val($lta.val()+"\nDataChannel enabled.\n");isrelay=false}};var initialize=function(){var clip=$("<div/>",{"class":"hallway-layout-options"}).append('<input type="text" class="hallway-input-text-clip" placeholder="Paste from clipboard"/>').append('<button class="hallway-btn-clip" title="Send to peers" type="submit"> send </button>');var wstext=$("<div/>",{"class":"hallway-layout-options"}).append('<input type="checkbox" class="hallway-input-checkbox-wsmode" value="enable">Use WebSocket</input>');$("<div/>",{id:"local-container","class":"media-layout"}).append('<video id="local-video" autoplay controls muted>').append(clip).append(wstext).append('<textarea id="local-ta" placeholder="Being typing in real time"></textarea>').appendTo("#hallway-video-container");var $input=$("#roomnameinput");$input.focus();$input.keypress(function(event){if(event.which===13){event.preventDefault();$("#joinroombtn").trigger("click")}});$(".hallway-input-checkbox-wsmode").bind("change",usewebsocket)};this.setListeners=function(engine){$("#local-ta").on("keydown",function textareaByteChar(e){var sc=engine.sendChar;var code=e.keyCode?e.keyCode:e.which;if(code==="37"||code==="38"||code==="39"||code==="40"){e.preventDefault();return}if(code!==16){if(code>=65&&code<=90){if(!e.shiftKey){code=code+32}sc(code,isrelay)}else if(e.shiftKey&&shiftKeyCode[code]!==undefined){code=shiftKeyCode[code];sc(code,isrelay)}else if(specialCharCode[code]!==undefined){code=specialCharCode[code];sc(code,isrelay)}else if(code>=48&&code<=57){sc(code,isrelay)}else{console.log("keycode not accepted")}}});$(".hallway-btn-clip").on("click",function(event){var ss=engine.sendString;var $clipinput=$(".hallway-input-text-clip");var word=$clipinput.val();if(word&&word.length<4){alert("Word is too short. Must be at least 4 characters long.")}else if(word){ss(word,isrelay);$clipinput.val("")}})};this.destroyListeners=function(){$(".hallway-input-checkbox-wsmode").unbind("change",usewebsocket)};this.openMediaViews=function(){$("#hallway-room-input").css("display","none");$("#hallway-video-container").css("display","inline-block")};this.closeMediaViews=function(destroyCallback,next){$("#hallway-room-title").empty();$("#hallway-video-container").fadeOut(function(){$("#hallway-room-input").fadeIn(200,function destroyCB(){destroyCallback(next)})});this.destroyListeners();this.deleteAllMedia()};this.appendPeerMedia=function(pid){console.log("appendPeerMedia",pid);var options=$("<div/>",{"class":"hallway-layout-options"}).append('<label class="hallway-label-bitrate">Bitrate: Not implemented yet.</label>');$("<div/>",{"class":"media-layout"}).append('<video id="'+pid+'" autoplay controls>').append(options).append('<div class="hallway-layout-options"/>').append('<textarea id="'+pid+'-ta" class="remote-textarea" readonly></textarea>').appendTo("#hallway-video-container");var $ml=$(".media-layout");var percent=100/$ml.length;$ml.css("width",percent+"%")};this.deletePeerMedia=function(pid){$("#"+pid).parent().remove();var $ml=$(".media-layout");var percent=100/$ml.length;$ml.css("width",percent+"%");console.log("deletePeerMedia",pid)};this.deleteAllMedia=function(){$("#hallway-video-container").empty()};this.updateTextArea=function(pid,bytechar){var $ta=$("#"+pid+"-ta");if(bytechar.length>3){$ta.val($ta.val()+"\n"+bytechar+"\n")}else if(bytechar==="8"){$ta.val($ta.val().slice(0,-1))}else{var ch=String.fromCharCode(bytechar);$ta.val($ta.val()+ch)}$ta.scrollTop($ta[0].scrollHeight)};this.updateTitle=function(room){$("#hallway-room-title").append("<p>Room: "+room+"</p>")};initialize()}function Lavatory(){console.log("lavatory ready");var lavatoryViews=new LavatoryViews;var rtc_engine=null;$(".lavatory-engage").bind("click",lavatoryViews.start);this.leave=function(destroyCallback,next){if(lavatoryViews){lavatoryViews.stop();$(".lavatory-engage").unbind("click",lavatoryViews.start)}destroyCallback(next)}}function LavatoryViews(){var $bitratelist=$("#lavatory-dropdown-bitrate a");var $bitratedropdown=$(".lavatory-dropdown-menu");var $startbtn=$(".lavatory-engage");var $bitratebtn=$("#lavatory-btn-bitrate");var $audiobtn=$("#lavatory-toggle-audio");var $videobtn=$("#lavatory-toggle-video");var $container=$(".lavatory-container-location");var janus=null;var echotest=null;var started=false;var bitrateTimer=null;var audioenabled=false;var videoenabled=false;var bitratevisible=false;var server="/janus/";console.log("creating LavatoryViews");var stopLavatory=function(){if(janus){clearInterval(bitrateTimer);janus.destroy();janus=null;echotest=null;started=false;bitrateTimer=null;audioenabled=false;videoenabled=false;bitratevisible=false}$container.css("display","none");$startbtn.removeClass("pressed").addClass("lifted").html("start");$audiobtn.removeClass("lifted").addClass("pressed");$audiobtn.html("Audio Enabled");$audiobtn.unbind("click");$videobtn.removeClass("lifted").addClass("pressed");$videobtn.html("Video Enabled");$videobtn.unbind("click");$bitratebtn.unbind("click");$bitratelist.unbind("click");$bitratedropdown.css("display","none")};function startLavatory(){if(started){stopLavatory()}else{$startbtn.removeClass("lifted").addClass("pressed").html("stop");startJanus();started=true}}function startJanus(){Janus.init({debug:true,callback:function(){if(!Janus.isWebrtcSupported()){return}janus=new Janus({server:server,success:function(){janus.attach({plugin:"janus.plugin.echotest",success:function(pluginHandle){$("#details").remove();$container.css("display","inline-block");echotest=pluginHandle;console.log("Plugin attached! ("+echotest.getPlugin()+", id="+echotest.getId()+")");var body={audio:true,video:true};console.log("Sending message ("+JSON.stringify(body)+")");echotest.send({message:body});console.log("Trying a createOffer too (audio/video sendrecv)");echotest.createOffer({media:{data:true},success:function(jsep){console.log("Got SDP!");console.log(jsep);echotest.send({message:body,jsep:jsep})},error:function(error){console.log("WebRTC error:");console.log(error)}})},error:function(error){console.log("  -- Error attaching plugin... "+error)},consentDialog:function(on){},onmessage:function(msg,jsep){console.log(" ::: Got a message :::");console.log(JSON.stringify(msg));if(jsep!==undefined&&jsep!==null){console.log("Handling SDP as well...");console.log(jsep);echotest.handleRemoteJsep({jsep:jsep})}var result=msg.result;if(result!==null&&result!==undefined){if(result==="done"){$("#lavatory-myvideo").remove();$("#lavatory-peervideo").remove();$("#lavatory-label-curbitrate").hide()}}},onlocalstream:function(stream){console.log(" ::: Got a local stream :::");console.log(JSON.stringify(stream));if($("#lavatory-myvideo").length===0){$("#lavatory-video-local").append('<video class="rounded centered" id="lavatory-myvideo" width=320 height=240 autoplay muted="muted"/>')}attachMediaStream($("#lavatory-myvideo").get(0),stream);$("#lavatory-myvideo").get(0).muted="muted"},onremotestream:function(stream){console.log(" ::: Got a remote stream :::");console.log(JSON.stringify(stream));if($("#lavatory-peervideo").length===0){$("#lavatory-video-remote").append('<video class="rounded centered" id="lavatory-peervideo" width=320 height=240 autoplay/>');$("#lavatory-peervideo").bind("loadedmetadata",function(){if(webrtcDetectedBrowser==="chrome"){var width=this.videoWidth;var height=this.videoHeight;$("#lavatory-label-resolution").text(width+" x "+height)}else{setTimeout(function(){var width=$("#lavatory-peervideo").get(0).videoWidth;var height=$("#lavatory-peervideo").get(0).videoHeight;$("#lavatory-label-resolution").text(width+" x "+height).show()},2e3)}})}attachMediaStream($("#lavatory-peervideo").get(0),stream);audioenabled=true;videoenabled=true;$audiobtn.bind("click",function(){audioenabled=!audioenabled;if(audioenabled){console.log("\n\nNICK audio pressed \n\n");$audiobtn.removeClass("lifted").addClass("pressed");$audiobtn.html("Audio Enabled")}else{console.log("\n\nNICK audio lifted \n\n");$audiobtn.removeClass("pressed").addClass("lifted");$audiobtn.html("Audio Disabled")}echotest.send({message:{audio:audioenabled}})});$videobtn.bind("click",function(){videoenabled=!videoenabled;if(videoenabled){$videobtn.removeClass("lifted").addClass("pressed");$videobtn.html("Video Enabled")}else{$videobtn.removeClass("pressed").addClass("lifted");$videobtn.html("Video Disabled")}echotest.send({message:{video:videoenabled}})});$bitratebtn.bind("click",function(e){e.preventDefault();bitratevisible=!bitratevisible;if(bitratevisible){$bitratedropdown.css("display","block")}else{$bitratedropdown.css("display","none")}});$bitratelist.bind("click",function(e){e.preventDefault();var id=$(this).attr("id");var bitrate=parseInt(id)*1e3;if(bitrate===0){console.log("Not limiting bandwidth via REMB")}else{console.log("Capping bandwidth to "+bitrate+" via REMB")}echotest.send({message:{bitrate:bitrate}});return false});if(webrtcDetectedBrowser==="chrome"){$("#lavatory-label-curbitrate").removeClass("hide").show();bitrateTimer=setInterval(function(){var bitrate=echotest.getBitrate();$("#lavatory-label-curbitrate").text(bitrate)},1e3)}},ondataopen:function(data){console.log("The DataChannel is available!")},ondata:function(data){console.log("We got data from the DataChannel! "+data);$("#lavatory-input-datarecv").val(data)},oncleanup:function(){console.log(" ::: Got a cleanup notification :::");$("#lavatory-myvideo").remove();$("#lavatory-peervideo").remove();$("#lavatory-label-curbitrate").hide()}})},error:function(error){console.log(error);alert(error,function(){startLavatory()})},destroyed:function(){startLavatory()}})}})}return{stop:stopLavatory,start:startLavatory}}function checkEnter(event){var theCode=event.keyCode?event.keyCode:event.which?event.which:event.charCode;if(theCode===13){sendData();return false}else{return true}}function sendData(){var data=$("#lavatory-input-datasend").val();if(data===""){alert("Insert a message to send on the DataChannel");return}echotest.data({text:data,error:function(reason){alert(reason)},success:function(){$("#lavatory-input-datasend").val("")}})}function Lobby(cb){console.log("lobby ready");var lobbyViews=new LobbyViews(cb);return lobbyViews.pages}function LobbyViews(cb){var LARGE=1400;var MID=1024;var SMALL=800;var $body=$("body");var $banner=$("#lobby-banner");window.addEventListener("resize",function(){var wwidth=window.innerWidth;if(wwidth<MID){$body.css("left",0);$body.css("right",0);$banner.css("right",0)}else{$body.css("left",200);$body.css("right",200);$banner.css("right",-150)}},true);$(document).ready(function(){window.dispatchEvent(new Event("resize"))});var $lobby_banner=$("#lobby-banner"),$lavatory=$("#lavatory-link"),$conference=$("#conference-link"),$lounge=$("#lounge-link"),$stage=$("#stage-link"),$hallway=$("#hallway-link"),$modular=$("#modular-link"),$lobbyPage=$("#lobby-main"),currentPage=$lobbyPage;var lobbyPage=function(){$lobby_banner.fadeOut();currentPage.fadeOut(function(){$lobbyPage.fadeIn()});currentPage=$lobbyPage;cb("lobby")};var conferencePage=function(){currentPage=$("#conference-main");$lobbyPage.fadeOut(function(){currentPage.fadeIn();$lobby_banner.fadeIn()});cb("conference")};var lavatoryPage=function(){currentPage=$("#lavatory-main");$lobbyPage.fadeOut(function(){currentPage.fadeIn();$lobby_banner.fadeIn()});cb("lavatory")};var loungePage=function(){currentPage=$("#lounge-main");$lobbyPage.fadeOut(function(){currentPage.fadeIn();$lobby_banner.fadeIn()});cb("lounge")};var stagePage=function(){currentPage=$("#stage-main");$lobbyPage.fadeOut(function(){currentPage.fadeIn();$lobby_banner.fadeIn()});cb("stage")};var modularPage=function(){currentPage=$("#modular-main");$lobbyPage.fadeOut(function(){currentPage.fadeIn();$lobby_banner.fadeIn()});cb("modular")};var hallwayPage=function(){currentPage=$("#hallway-main");$lobbyPage.fadeOut(function(){currentPage.fadeIn(function(){$("#roomnameinput").focus()});$lobby_banner.fadeIn()});cb("hallway")};var pages={lavatory:lavatoryPage,conference:conferencePage,lounge:loungePage,lobby:lobbyPage,stage:stagePage,modular:modularPage,hallway:hallwayPage};return{pages:pages}}function Lounge(){var rtc_engine=new RTCEngine;var loungeViews=new LoungeViews;var localId=null;var roomName="";var $input=$("#lounge-input-roomname");var $create=$("#lounge-btn-create");var handleSocketEvents=function(signaler,data){if(signaler){var pid="";switch(signaler){case"connected":console.log("rtc engine connected");rtc_engine.join();break;case"id":localId=data.id;break;case"create":pid=data.id;console.log("creating new media element",pid);loungeViews.appendPeerMedia(pid);break;case"peerDisconnect":pid=data.id;loungeViews.deletePeerMedia(data.id);break;case"readbytechar":loungeViews.updateTextArea(data.from_id,data.code);break;case"info":console.log(data.msg);break;case"error":console.log(data.msg);break;default:break}}};var handleCreateBtn=function(event){if(roomName===""){roomName=$input.val()}if(roomName===""){alert("Cannot have empty name")}else{event.preventDefault();loungeViews.openMediaViews();(function(room,engine){console.log("starting rtc engine");engine.connect(room,handleSocketEvents)})(roomName,rtc_engine);loungeViews.updateTitle(roomName);window.history.replaceState({},"OpenStream "+roomName,"#"+roomName);$create.unbind("click",handleCreateBtn)}};this.leave=function(destroyCallback,next){$input.val("");$create.unbind("click",handleCreateBtn);if(rtc_engine){rtc_engine.leave();rtc_engine=null}if(loungeViews){loungeViews.closeMediaViews(destroyCallback,next);loungeViews=null}console.log("Lounge exiting")};$create.bind("click",handleCreateBtn);loungeViews.setListeners(rtc_engine);(function queryUrl(){var hashurl=window.location.hash;var hashpos=hashurl.lastIndexOf("#");if(hashpos!==-1){hashurl=hashurl.substring(hashpos+1)}if(hashpos===-1){roomName=""}else if(hashurl.length>0){roomName=hashurl}else{roomName=""}console.log("roomName",roomName);if(roomName!==""){$create.trigger("click")}})()}function LoungeViews(){var initialize=function(){$("<div/>",{id:"local-container","class":"media-layout"}).append('<video id="local-video" autoplay controls muted>').appendTo("#lounge-video-container");var $input=$("#lounge-input-roomname");$input.focus();$input.keypress(function(event){if(event.which===13){event.preventDefault();$("#lounge-btn-create").trigger("click")}});$("#lounge-ck-lock").bind("click",handleCreatePasswordCheck);$("#lounge-btn-cancel").bind("click",handleCancelCreateRoom)};var handleCreatePasswordCheck=function(event){if(event.target.checked){$("#lounge-input-pw").fadeIn(200)}else{$("#lounge-input-pw").fadeOut(200)}};var handleCancelCreateRoom=function(event){console.log("closing create room modal");$("#lounge-modal-create").removeClass("show").addClass("hide")};this.setListeners=function(engine){};this.destroyListeners=function(engine){};this.openMediaViews=function(){$("#lounge-modal-create").removeClass("show").addClass("hide");$("#lounge-video-container").fadeIn()};this.closeMediaViews=function(destroyCallback,next){$("#lounge-room-title").empty();$("#lounge-video-container").fadeOut(function(){$("#lounge-modal-create").removeClass("hide").addClass("show");destroyCallback(next)});this.deleteAllMedia()};this.appendPeerMedia=function(pid){console.log("appendPeerMedia",pid);$("<div/>",{"class":"media-layout"}).append('<video id="'+pid+'" autoplay controls>').appendTo("#lounge-video-container");var $ml=$(".media-layout");var percent=100/$ml.length;$ml.css("width",percent+"%")};this.deletePeerMedia=function(pid){$("#"+pid).parent().remove();var $ml=$(".media-layout");var percent=100/$ml.length;$ml.css("width",percent+"%");console.log("deletePeerMedia",pid)};this.deleteAllMedia=function(){$("#lounge-video-container").empty();$("#lounge-ck-lock").unbind("click",handleCreatePasswordCheck);$("#lounge-btn-cancel").unbind("click",handleCancelCreateRoom)};this.updateTitle=function(room){$("#lounge-room-title").append("<p>Room: "+room+"</p>")};initialize()}function Modular(){console.log("modular ready");var modularViews=new ModularViews;var rtc_engine=null;this.leave=function(destroyCallback,next){if(rtc_engine){rtc_engine.leave();rtc_engine=null
}destroyCallback(next)}}function ModularViews(){}$(document).ready(function(){var currentApp=null,hallway=null,lavatory=null,conference=null,lounge=null,stage=null,modular=null;var observer=function(next){if(currentApp){currentApp.leave(destroy,next)}else{start(next)}};var destroy=function(next){console.log("cleaning up");hallway=null;lavatory=null;conference=null;lounge=null;stage=null;modular=null;start(next)};var start=function(next){if(next==="lobby"){console.log("observer calls lobby");currentApp=null}else if(next==="hallway"){hallway=new Hallway;currentApp=hallway}else if(next==="lavatory"){lavatory=new Lavatory;currentApp=lavatory}else if(next==="conference"){conference=new Conference;currentApp=conference}else if(next==="lounge"){lounge=new Lounge;currentApp=lounge}else if(next==="stage"){stage=new Stage;currentApp=stage}else if(next==="modular"){modular=new Modular;currentApp=modular}else{console.log("start: unrecognized command");currentApp=null}};var lobby=new Lobby(observer);var updatePage=function(event){var urlpath=window.location.pathname.substring(1);var hashurl=window.location.hash.substring(1);var url="";url=urlpath?urlpath:hashurl;console.log("urlpath",urlpath);console.log("hashurl",hashurl);console.log("url",url);switch(url){case"hallway":lobby.hallway();break;case"lavatory":lobby.lavatory();break;case"stage":lobby.stage();break;case"modular":lobby.modular();break;case"conference":lobby.conference();break;case"lounge":lobby.lounge();break;default:lobby.lobby();break}};$(window).bind("hashchange",updatePage).trigger("hashchange");$("#href-lobby").on("click",function(event){window.history.replaceState({},"OpenStream - Lobby","/");updatePage(event)});$("#href-hallway").on("click",function(event){window.history.replaceState({},"OpenStream - Hallway","/hallway");updatePage(event)});$("#href-lavatory").on("click",function(event){window.history.replaceState({},"OpenStream - Lavatory","/lavatory");updatePage(event)});$("#href-lounge").on("click",function(event){window.history.replaceState({},"OpenStream - Lounge","/lounge");updatePage(event)})});function Stage(){console.log("stage ready");var stageViews=new StageViews;var rtc_engine=null;this.leave=function(destroyCallback,next){if(rtc_engine){rtc_engine.leave();rtc_engine=null}destroyCallback(next)}}function StageViews(){}Janus.sessions={};Janus.extensionId="hapfgfdkleiggjjpfpenajgdnfckjpaj";Janus.isExtensionEnabled=function(){if(window.navigator.userAgent.match("Chrome")){var chromever=parseInt(window.navigator.userAgent.match(/Chrome\/(.*) /)[1],10);var maxver=33;if(window.navigator.userAgent.match("Linux"))maxver=35;if(chromever>=26&&chromever<=maxver){return true}return $("#janus-extension-installed").length>0}else{return true}};Janus.noop=function(){};Janus.init=function(options){options=options||{};options.callback=typeof options.callback=="function"?options.callback:Janus.noop;if(Janus.initDone===true){options.callback()}else{if(typeof console=="undefined"||typeof console.log=="undefined")console={log:function(){}};Janus.log=options.debug===true?console.log.bind(console):Janus.noop;Janus.log("Initializing library");Janus.initDone=true;window.onbeforeunload=function(){Janus.log("Closing window");for(var s in Janus.sessions){Janus.log("Destroying session "+s);Janus.sessions[s].destroy()}};function addJs(src){if(src==="jquery.min.js"){if(window.jQuery){options.callback();return}}var oHead=document.getElementsByTagName("head").item(0);var oScript=document.createElement("script");oScript.type="text/javascript";oScript.src=src;oScript.onload=function(){Janus.log("Library "+src+" loaded");if(src==="jquery.min.js"){options.callback()}};oHead.appendChild(oScript)}addJs("jquery.min.js")}};Janus.isWebrtcSupported=function(){if(RTCPeerConnection===null||getUserMedia===null){return false}return true};function Janus(gatewayCallbacks){if(Janus.initDone===undefined){gatewayCallbacks.error("Library not initialized");return{}}if(!Janus.isWebrtcSupported()){gatewayCallbacks.error("WebRTC not supported by this browser");return{}}Janus.log("Library initialized: "+Janus.initDone);gatewayCallbacks=gatewayCallbacks||{};gatewayCallbacks.success=typeof gatewayCallbacks.success=="function"?gatewayCallbacks.success:jQuery.noop;gatewayCallbacks.error=typeof gatewayCallbacks.error=="function"?gatewayCallbacks.error:jQuery.noop;gatewayCallbacks.destroyed=typeof gatewayCallbacks.destroyed=="function"?gatewayCallbacks.destroyed:jQuery.noop;if(gatewayCallbacks.server===null||gatewayCallbacks.server===undefined){gatewayCallbacks.error("Invalid gateway url");return{}}var websockets=false;var ws=null;var servers=null,serversIndex=0;var server=gatewayCallbacks.server;if($.isArray(server)){Janus.log("Multiple servers provided ("+server.length+"), will use the first that works");server=null;servers=gatewayCallbacks.server;Janus.log(servers)}else{if(server.indexOf("ws")===0){websockets=true;Janus.log("Using WebSockets to contact Janus")}else{websockets=false;Janus.log("Using REST API to contact Janus")}Janus.log(server)}var iceServers=gatewayCallbacks.iceServers;if(iceServers===undefined||iceServers===null)iceServers=[{url:"stun:stun.l.google.com:19302"}];var maxev=null;if(gatewayCallbacks.max_poll_events!==undefined&&gatewayCallbacks.max_poll_events!==null)maxev=gatewayCallbacks.max_poll_events;if(maxev<1)maxev=1;var connected=false;var sessionId=null;var pluginHandles={};var that=this;var retries=0;var transactions={};createSession(gatewayCallbacks);this.getServer=function(){return server};this.isConnected=function(){return connected};this.getSessionId=function(){return sessionId};this.destroy=function(callbacks){destroySession(callbacks)};this.attach=function(callbacks){createHandle(callbacks)};function randomString(len){charSet="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";var randomString="";for(var i=0;i<len;i++){var randomPoz=Math.floor(Math.random()*charSet.length);randomString+=charSet.substring(randomPoz,randomPoz+1)}return randomString}function eventHandler(){if(sessionId==null)return;Janus.log("Long poll...");if(!connected){Janus.log("Is the gateway down? (connected=false)");return}var longpoll=server+"/"+sessionId+"?rid="+(new Date).getTime();if(maxev!==undefined&&maxev!==null)longpoll=longpoll+"&maxev="+maxev;$.ajax({type:"GET",url:longpoll,cache:false,timeout:6e4,success:handleEvent,error:function(XMLHttpRequest,textStatus,errorThrown){Janus.log(textStatus+": "+errorThrown);retries++;if(retries>3){connected=false;gatewayCallbacks.error("Lost connection to the gateway (is it down?)");return}eventHandler()},dataType:"json"})}function handleEvent(json){retries=0;if(!websockets&&sessionId!==undefined&&sessionId!==null)setTimeout(eventHandler,200);Janus.log("Got event on session "+sessionId);Janus.log(json);if(!websockets&&$.isArray(json)){for(var i=0;i<json.length;i++){handleEvent(json[i])}return}if(json["janus"]==="keepalive"){return}else if(json["janus"]==="ack"){return}else if(json["janus"]==="success"){var transaction=json["transaction"];if(transaction!==null&&transaction!==undefined){var reportSuccess=transactions[transaction];if(reportSuccess!==null&&reportSuccess!==undefined){reportSuccess(json)}transactions[transaction]=null}return}else if(json["janus"]==="webrtcup"){return}else if(json["janus"]==="hangup"){var sender=json["sender"];if(sender===undefined||sender===null){Janus.log("Missing sender...");return}var pluginHandle=pluginHandles[sender];if(pluginHandle===undefined||pluginHandle===null){Janus.log("This handle is not attached to this session");return}pluginHandle.hangup()}else if(json["janus"]==="detached"){var sender=json["sender"];if(sender===undefined||sender===null){Janus.log("Missing sender...");return}var pluginHandle=pluginHandles[sender];if(pluginHandle===undefined||pluginHandle===null){Janus.log("This handle is not attached to this session");return}pluginHandle.ondetached();pluginHandle.detach()}else if(json["janus"]==="error"){Janus.log("Ooops: "+json["error"].code+" "+json["error"].reason);var transaction=json["transaction"];if(transaction!==null&&transaction!==undefined){var reportSuccess=transactions[transaction];if(reportSuccess!==null&&reportSuccess!==undefined){reportSuccess(json)}transactions[transaction]=null}return}else if(json["janus"]==="event"){var sender=json["sender"];if(sender===undefined||sender===null){Janus.log("Missing sender...");return}var plugindata=json["plugindata"];if(plugindata===undefined||plugindata===null){Janus.log("Missing plugindata...");return}Janus.log("  -- Event is coming from "+sender+" ("+plugindata["plugin"]+")");var data=plugindata["data"];Janus.log(data);var pluginHandle=pluginHandles[sender];if(pluginHandle===undefined||pluginHandle===null){Janus.log("This handle is not attached to this session");return}var jsep=json["jsep"];if(jsep!==undefined&&jsep!==null){Janus.log("Handling SDP as well...");Janus.log(jsep)}var callback=pluginHandle.onmessage;if(callback!==null&&callback!==undefined){Janus.log("Notifying application...");callback(data,jsep)}else{Janus.log("No provided notification callback")}}else{Janus.log("Unknown message '"+json["janus"]+"'")}}function keepAlive(){if(server===null||!websockets||!connected)return;setTimeout(keepAlive,3e4);var request={janus:"keepalive",session_id:sessionId,transaction:randomString(12)};ws.send(JSON.stringify(request))}function createSession(callbacks){var transaction=randomString(12);var request={janus:"create",transaction:transaction};if(server===null&&$.isArray(servers)){server=servers[serversIndex];if(server.indexOf("ws")===0){websockets=true;Janus.log("Server #"+(serversIndex+1)+": trying WebSockets to contact Janus")}else{websockets=false;Janus.log("Server #"+(serversIndex+1)+": trying REST API to contact Janus")}Janus.log(server)}if(websockets){ws=new WebSocket(server);ws.onerror=function(){Janus.log("Error connecting to the Janus WebSockets server...");if($.isArray(servers)){serversIndex++;if(serversIndex==servers.length){callbacks.error("Error connecting to any of the provided Janus servers: Is the gateway down?");return}server=null;setTimeout(function(){createSession(callbacks)},200);return}callbacks.error("Error connecting to the Janus WebSockets server: Is the gateway down?")};ws.onopen=function(){transactions[transaction]=function(json){Janus.log("Create session:");Janus.log(json);if(json["janus"]!=="success"){Janus.log("Ooops: "+json["error"].code+" "+json["error"].reason);callbacks.error(json["error"].reason);return}setTimeout(keepAlive,3e4);connected=true;sessionId=json.data["id"];Janus.log("Created session: "+sessionId);Janus.sessions[sessionId]=that;callbacks.success()};ws.send(JSON.stringify(request))};ws.onmessage=function(event){handleEvent(JSON.parse(event.data))};ws.onclose=function(){if(server===null||!connected)return;connected=false;gatewayCallbacks.error("Lost connection to the gateway (is it down?)")};return}$.ajax({type:"POST",url:server,cache:false,contentType:"application/json",data:JSON.stringify(request),success:function(json){Janus.log("Create session:");Janus.log(json);if(json["janus"]!=="success"){Janus.log("Ooops: "+json["error"].code+" "+json["error"].reason);callbacks.error(json["error"].reason);return}connected=true;sessionId=json.data["id"];Janus.log("Created session: "+sessionId);Janus.sessions[sessionId]=that;eventHandler();callbacks.success()},error:function(XMLHttpRequest,textStatus,errorThrown){Janus.log(textStatus+": "+errorThrown);if($.isArray(servers)){serversIndex++;if(serversIndex==servers.length){callbacks.error("Error connecting to any of the provided Janus servers: Is the gateway down?");return}server=null;setTimeout(function(){createSession(callbacks)},200);return}if(errorThrown==="")callbacks.error(textStatus+": Is the gateway down?");else callbacks.error(textStatus+": "+errorThrown)},dataType:"json"})}function destroySession(callbacks,syncRequest){syncRequest=syncRequest===true;Janus.log("Destroying session "+sessionId+" (sync="+syncRequest+")");callbacks=callbacks||{};callbacks.success=typeof callbacks.success=="function"?callbacks.success:jQuery.noop;if(!connected){Janus.log("Is the gateway down? (connected=false)");callbacks.success();return}if(sessionId===undefined||sessionId===null){Janus.log("No session to destroy");callbacks.success();gatewayCallbacks.destroyed();return}delete Janus.sessions[sessionId];for(ph in pluginHandles){var phv=pluginHandles[ph];Janus.log("Destroying handle "+phv.id+" ("+phv.plugin+")");destroyHandle(phv.id,null,syncRequest)}var request={janus:"destroy",transaction:randomString(12)};if(websockets){request["session_id"]=sessionId;ws.send(JSON.stringify(request));callbacks.success();gatewayCallbacks.destroyed();return}$.ajax({type:"POST",url:server+"/"+sessionId,async:syncRequest,cache:false,contentType:"application/json",data:JSON.stringify(request),success:function(json){Janus.log("Destroyed session:");Janus.log(json);sessionId=null;connected=false;if(json["janus"]!=="success"){Janus.log("Ooops: "+json["error"].code+" "+json["error"].reason)}callbacks.success();gatewayCallbacks.destroyed()},error:function(XMLHttpRequest,textStatus,errorThrown){Janus.log(textStatus+": "+errorThrown);sessionId=null;connected=false;callbacks.success();gatewayCallbacks.destroyed()},dataType:"json"})}function createHandle(callbacks){callbacks=callbacks||{};callbacks.success=typeof callbacks.success=="function"?callbacks.success:jQuery.noop;callbacks.error=typeof callbacks.error=="function"?callbacks.error:jQuery.noop;callbacks.consentDialog=typeof callbacks.consentDialog=="function"?callbacks.consentDialog:jQuery.noop;callbacks.onmessage=typeof callbacks.onmessage=="function"?callbacks.onmessage:jQuery.noop;callbacks.onlocalstream=typeof callbacks.onlocalstream=="function"?callbacks.onlocalstream:jQuery.noop;callbacks.onremotestream=typeof callbacks.onremotestream=="function"?callbacks.onremotestream:jQuery.noop;callbacks.ondata=typeof callbacks.ondata=="function"?callbacks.ondata:jQuery.noop;callbacks.ondataopen=typeof callbacks.ondataopen=="function"?callbacks.ondataopen:jQuery.noop;callbacks.oncleanup=typeof callbacks.oncleanup=="function"?callbacks.oncleanup:jQuery.noop;callbacks.ondetached=typeof callbacks.ondetached=="function"?callbacks.ondetached:jQuery.noop;if(!connected){Janus.log("Is the gateway down? (connected=false)");callbacks.error("Is the gateway down? (connected=false)");return}var plugin=callbacks.plugin;if(plugin===undefined||plugin===null){Janus.log("Invalid plugin");callbacks.error("Invalid plugin");return}var transaction=randomString(12);var request={janus:"attach",plugin:plugin,transaction:transaction};if(websockets){transactions[transaction]=function(json){Janus.log("Create handle:");Janus.log(json);if(json["janus"]!=="success"){Janus.log("Ooops: "+json["error"].code+" "+json["error"].reason);callbacks.error("Ooops: "+json["error"].code+" "+json["error"].reason);return}var handleId=json.data["id"];Janus.log("Created handle: "+handleId);var pluginHandle={session:that,plugin:plugin,id:handleId,webrtcStuff:{started:false,myStream:null,mySdp:null,pc:null,dataChannel:null,dtmfSender:null,trickle:true,iceDone:false,sdpSent:false,bitrate:{value:null,bsnow:null,bsbefore:null,tsnow:null,tsbefore:null,timer:null}},getId:function(){return handleId},getPlugin:function(){return plugin},getBitrate:function(){return getBitrate(handleId)},send:function(callbacks){sendMessage(handleId,callbacks)},data:function(callbacks){sendData(handleId,callbacks)},dtmf:function(callbacks){sendDtmf(handleId,callbacks)},consentDialog:callbacks.consentDialog,onmessage:callbacks.onmessage,createOffer:function(callbacks){prepareWebrtc(handleId,callbacks)},createAnswer:function(callbacks){prepareWebrtc(handleId,callbacks)},handleRemoteJsep:function(callbacks){prepareWebrtcPeer(handleId,callbacks)},onlocalstream:callbacks.onlocalstream,onremotestream:callbacks.onremotestream,ondata:callbacks.ondata,ondataopen:callbacks.ondataopen,oncleanup:callbacks.oncleanup,ondetached:callbacks.ondetached,hangup:function(){cleanupWebrtc(handleId)},detach:function(callbacks){destroyHandle(handleId,callbacks)}};pluginHandles[handleId]=pluginHandle;callbacks.success(pluginHandle)};request["session_id"]=sessionId;ws.send(JSON.stringify(request));return}$.ajax({type:"POST",url:server+"/"+sessionId,cache:false,contentType:"application/json",data:JSON.stringify(request),success:function(json){Janus.log("Create handle:");Janus.log(json);if(json["janus"]!=="success"){Janus.log("Ooops: "+json["error"].code+" "+json["error"].reason);callbacks.error("Ooops: "+json["error"].code+" "+json["error"].reason);return}var handleId=json.data["id"];Janus.log("Created handle: "+handleId);var pluginHandle={session:that,plugin:plugin,id:handleId,webrtcStuff:{started:false,myStream:null,mySdp:null,pc:null,dataChannel:null,dtmfSender:null,trickle:true,iceDone:false,sdpSent:false,bitrate:{value:null,bsnow:null,bsbefore:null,tsnow:null,tsbefore:null,timer:null}},getId:function(){return handleId},getPlugin:function(){return plugin},getBitrate:function(){return getBitrate(handleId)},send:function(callbacks){sendMessage(handleId,callbacks)},data:function(callbacks){sendData(handleId,callbacks)},dtmf:function(callbacks){sendDtmf(handleId,callbacks)},consentDialog:callbacks.consentDialog,onmessage:callbacks.onmessage,createOffer:function(callbacks){prepareWebrtc(handleId,callbacks)},createAnswer:function(callbacks){prepareWebrtc(handleId,callbacks)},handleRemoteJsep:function(callbacks){prepareWebrtcPeer(handleId,callbacks)},onlocalstream:callbacks.onlocalstream,onremotestream:callbacks.onremotestream,ondata:callbacks.ondata,ondataopen:callbacks.ondataopen,oncleanup:callbacks.oncleanup,ondetached:callbacks.ondetached,hangup:function(){cleanupWebrtc(handleId)},detach:function(callbacks){destroyHandle(handleId,callbacks)}};pluginHandles[handleId]=pluginHandle;callbacks.success(pluginHandle)},error:function(XMLHttpRequest,textStatus,errorThrown){Janus.log(textStatus+": "+errorThrown)},dataType:"json"})}function sendMessage(handleId,callbacks){callbacks=callbacks||{};callbacks.success=typeof callbacks.success=="function"?callbacks.success:jQuery.noop;callbacks.error=typeof callbacks.error=="function"?callbacks.error:jQuery.noop;if(!connected){Janus.log("Is the gateway down? (connected=false)");callbacks.error("Is the gateway down? (connected=false)");return}var message=callbacks.message;var jsep=callbacks.jsep;var request={janus:"message",body:message,transaction:randomString(12)};if(jsep!==null&&jsep!==undefined)request.jsep=jsep;Janus.log("Sending message to plugin (handle="+handleId+"):");Janus.log(request);if(websockets){request["session_id"]=sessionId;request["handle_id"]=handleId;ws.send(JSON.stringify(request));return}$.ajax({type:"POST",url:server+"/"+sessionId+"/"+handleId,cache:false,contentType:"application/json",data:JSON.stringify(request),success:function(json){Janus.log(json);Janus.log("Message sent!");if(json["janus"]!=="ack"){Janus.log("Ooops: "+json["error"].code+" "+json["error"].reason);callbacks.error(json["error"].code+" "+json["error"].reason);return}callbacks.success()},error:function(XMLHttpRequest,textStatus,errorThrown){Janus.log(textStatus+": "+errorThrown);callbacks.error(textStatus+": "+errorThrown)},dataType:"json"})}function sendTrickleCandidate(handleId,candidate){if(!connected){Janus.log("Is the gateway down? (connected=false)");return}var request={janus:"trickle",candidate:candidate,transaction:randomString(12)};Janus.log("Sending trickle candidate (handle="+handleId+"):");Janus.log(request);if(websockets){request["session_id"]=sessionId;request["handle_id"]=handleId;ws.send(JSON.stringify(request));return}$.ajax({type:"POST",url:server+"/"+sessionId+"/"+handleId,cache:false,contentType:"application/json",data:JSON.stringify(request),success:function(json){Janus.log(json);Janus.log("Candidate sent!");if(json["janus"]!=="ack"){Janus.log("Ooops: "+json["error"].code+" "+json["error"].reason);return}},error:function(XMLHttpRequest,textStatus,errorThrown){Janus.log(textStatus+": "+errorThrown)},dataType:"json"})}function sendData(handleId,callbacks){callbacks=callbacks||{};callbacks.success=typeof callbacks.success=="function"?callbacks.success:jQuery.noop;callbacks.error=typeof callbacks.error=="function"?callbacks.error:jQuery.noop;var pluginHandle=pluginHandles[handleId];var config=pluginHandle.webrtcStuff;if(config.dataChannel===null||config.dataChannel===undefined){Janus.log("Invalid data channel");callbacks.error("Invalid data channel");return}var text=callbacks.text;if(text===null||text===undefined){Janus.log("Invalid text");callbacks.error("Invalid text");return}Janus.log("Sending string on data channel: "+text);config.dataChannel.send(text);callbacks.success()}function sendDtmf(handleId,callbacks){callbacks=callbacks||{};callbacks.success=typeof callbacks.success=="function"?callbacks.success:jQuery.noop;callbacks.error=typeof callbacks.error=="function"?callbacks.error:jQuery.noop;var pluginHandle=pluginHandles[handleId];var config=pluginHandle.webrtcStuff;if(config.dtmfSender===null||config.dtmfSender===undefined){if(config.myStream!==undefined&&config.myStream!==null){var tracks=config.myStream.getAudioTracks();if(tracks!==null&&tracks!==undefined&&tracks.length>0){var local_audio_track=tracks[0];config.dtmfSender=config.pc.createDTMFSender(local_audio_track);Janus.log("Created DTMF Sender");config.dtmfSender.ontonechange=function(tone){Janus.log("Sent DTMF tone: "+tone.tone)}}}if(config.dtmfSender===null||config.dtmfSender===undefined){Janus.log("Invalid DTMF configuration");callbacks.error("Invalid DTMF configuration");return}}var dtmf=callbacks.dtmf;if(dtmf===null||dtmf===undefined){Janus.log("Invalid DTMF parameters");callbacks.error("Invalid DTMF parameters");return}var tones=dtmf.tones;if(tones===null||tones===undefined){Janus.log("Invalid DTMF string");callbacks.error("Invalid DTMF string");return}var duration=dtmf.duration;if(duration===null||duration===undefined)duration=500;var gap=dtmf.gap;if(gap===null||gap===undefined)gap=50;Janus.log("Sending DTMF string "+tones+" (duration "+duration+"ms, gap "+gap+"ms");config.dtmfSender.insertDTMF(tones,duration,gap)}function destroyHandle(handleId,callbacks,syncRequest){syncRequest=syncRequest===true;Janus.log("Destroying handle "+handleId+" (sync="+syncRequest+")");callbacks=callbacks||{};callbacks.success=typeof callbacks.success=="function"?callbacks.success:jQuery.noop;callbacks.error=typeof callbacks.error=="function"?callbacks.error:jQuery.noop;cleanupWebrtc(handleId);if(!connected){Janus.log("Is the gateway down? (connected=false)");callbacks.error("Is the gateway down? (connected=false)");return}var request={janus:"detach",transaction:randomString(12)};if(websockets){request["session_id"]=sessionId;request["handle_id"]=handleId;ws.send(JSON.stringify(request));var pluginHandle=pluginHandles[handleId];delete pluginHandles[handleId];callbacks.success();return}$.ajax({type:"POST",url:server+"/"+sessionId+"/"+handleId,async:syncRequest,cache:false,contentType:"application/json",data:JSON.stringify(request),success:function(json){Janus.log("Destroyed handle:");Janus.log(json);if(json["janus"]!=="success"){Janus.log("Ooops: "+json["error"].code+" "+json["error"].reason)}var pluginHandle=pluginHandles[handleId];delete pluginHandles[handleId];callbacks.success()},error:function(XMLHttpRequest,textStatus,errorThrown){Janus.log(textStatus+": "+errorThrown);var pluginHandle=pluginHandles[handleId];delete pluginHandles[handleId];callbacks.success()},dataType:"json"})}function streamsDone(handleId,jsep,media,callbacks,stream){var pluginHandle=pluginHandles[handleId];var config=pluginHandle.webrtcStuff;if(stream!==null&&stream!==undefined)Janus.log(stream);config.myStream=stream;Janus.log("streamsDone:");if(stream!==null&&stream!==undefined)Janus.log(stream);var pc_config={iceServers:iceServers};var pc_constraints={optional:[{DtlsSrtpKeyAgreement:true}]};Janus.log("Creating PeerConnection:");Janus.log(pc_constraints);config.pc=new RTCPeerConnection(pc_config,pc_constraints);Janus.log(config.pc);if(config.pc.getStats&&webrtcDetectedBrowser=="chrome")config.bitrate.value="0 kbps";Janus.log("Preparing local SDP and gathering candidates (trickle="+config.trickle+")");config.pc.onicecandidate=function(event){if(event.candidate==null){Janus.log("End of candidates.");config.iceDone=true;if(config.trickle===true){sendTrickleCandidate(handleId,null)}else{sendSDP(handleId,callbacks)}}else{Janus.log("candidates: "+JSON.stringify(event.candidate));if(config.trickle===true){sendTrickleCandidate(handleId,event.candidate)}}};if(stream!==null&&stream!==undefined){Janus.log("Adding local stream");config.pc.addStream(stream);pluginHandle.onlocalstream(stream)}config.pc.onaddstream=function(remoteStream){Janus.log("Handling Remote Stream:");Janus.log(remoteStream);if(config.pc.getStats&&webrtcDetectedBrowser=="chrome"){Janus.log("Starting bitrate monitor");config.bitrate.timer=setInterval(function(){config.pc.getStats(function(stats){var results=stats.result();for(var i=0;i<results.length;i++){var res=results[i];if(res.type=="ssrc"&&res.stat("googFrameHeightReceived")){config.bitrate.bsnow=res.stat("bytesReceived");config.bitrate.tsnow=res.timestamp;if(config.bitrate.bsbefore===null||config.bitrate.tsbefore===null){config.bitrate.bsbefore=config.bitrate.bsnow;config.bitrate.tsbefore=config.bitrate.tsnow}else{var bitRate=Math.round((config.bitrate.bsnow-config.bitrate.bsbefore)*8/(config.bitrate.tsnow-config.bitrate.tsbefore));config.bitrate.value=bitRate+" kbits/sec";config.bitrate.bsbefore=config.bitrate.bsnow;config.bitrate.tsbefore=config.bitrate.tsnow}}}})},1e3)}pluginHandle.onremotestream(remoteStream.stream)};if(isDataEnabled(media)){Janus.log("Creating data channel");var onDataChannelMessage=function(event){Janus.log("Received message on data channel: "+event.data);pluginHandle.ondata(event.data)};var onDataChannelStateChange=function(){Janus.log("State change on data channel: "+config.dataChannel.readyState);if(config.dataChannel.readyState==="open"){pluginHandle.ondataopen()}};var onDataChannelError=function(error){Janus.log("Got error on data channel:");Janus.log(error)};config.dataChannel=config.pc.createDataChannel("JanusDataChannel",{ordered:false});config.dataChannel.onmessage=onDataChannelMessage;config.dataChannel.onopen=onDataChannelStateChange;config.dataChannel.onclose=onDataChannelStateChange;config.dataChannel.onerror=onDataChannelError}if(jsep===null||jsep===undefined){createOffer(handleId,media,callbacks)}else{config.pc.setRemoteDescription(new RTCSessionDescription(jsep),function(){Janus.log("Remote description accepted!");createAnswer(handleId,media,callbacks)},callbacks.error)}}function prepareWebrtc(handleId,callbacks){callbacks=callbacks||{};callbacks.success=typeof callbacks.success=="function"?callbacks.success:jQuery.noop;callbacks.error=typeof callbacks.error=="function"?callbacks.error:webrtcError;var jsep=callbacks.jsep;var media=callbacks.media;var pluginHandle=pluginHandles[handleId];var config=pluginHandle.webrtcStuff;if(config.pc!==undefined&&config.pc!==null){Janus.log("Updating existing media session");if(jsep===null||jsep===undefined){createOffer(handleId,media,callbacks)}else{config.pc.setRemoteDescription(new RTCSessionDescription(jsep),function(){Janus.log("Remote description accepted!");createAnswer(handleId,media,callbacks)},callbacks.error)}return}config.trickle=isTrickleEnabled(callbacks.trickle);if(isAudioSendEnabled(media)||isVideoSendEnabled(media)){var constraints={mandatory:{},optional:[]};pluginHandle.consentDialog(true);var videoSupport=isVideoSendEnabled(media);if(videoSupport===true&&media!=undefined&&media!=null){if(media.video==="lowres"){if(!navigator.mozGetUserMedia){videoSupport={mandatory:{maxHeight:"240",maxWidth:"320"},optional:[]};Janus.log("Adding media constraint (low-res video)");Janus.log(videoSupport)}else{Janus.log("Firefox doesn't support media constraints at the moment, ignoring low-res video")}}else if(media.video==="hires"){if(!navigator.mozGetUserMedia){videoSupport={mandatory:{minHeight:"720",minWidth:"1280"},optional:[]};Janus.log("Adding media constraint (hi-res video)");Janus.log(videoSupport)}else{Janus.log("Firefox doesn't support media constraints at the moment, ignoring hi-res video")}}else if(media.video==="screen"){if(window.location.protocol!=="https:"){Janus.log("Screen sharing only works on HTTPS, try the https:// version of this page");pluginHandle.consentDialog(false);callbacks.error("Screen sharing only works on HTTPS, try the https:// version of this page");return}var cache={};function callbackUserMedia(error,stream){pluginHandle.consentDialog(false);if(error){callbacks.error(error)}else{streamsDone(handleId,jsep,media,callbacks,stream)}}function getScreenMedia(constraints,gsmCallback){Janus.log("Adding media constraint (screen capture)");Janus.log(constraints);getUserMedia(constraints,function(stream){gsmCallback(null,stream)},function(error){pluginHandle.consentDialog(false);gsmCallback(error)})}if(window.navigator.userAgent.match("Chrome")){var chromever=parseInt(window.navigator.userAgent.match(/Chrome\/(.*) /)[1],10);var maxver=33;if(window.navigator.userAgent.match("Linux"))maxver=35;if(chromever>=26&&chromever<=maxver){constraints={video:{mandatory:{googLeakyBucket:true,maxWidth:window.screen.width,maxHeight:window.screen.height,maxFrameRate:3,chromeMediaSource:"screen"}},audio:isAudioSendEnabled(media)};getScreenMedia(constraints,callbackUserMedia)}else{var pending=window.setTimeout(function(){error=new Error("NavigatorUserMediaError");error.name='The required Chrome extension is not installed: click <a href="#">here</a> to install it. (NOTE: this will need you to refresh the page)';pluginHandle.consentDialog(false);return callbacks.error(error)},1e3);cache[pending]=[callbackUserMedia,null];window.postMessage({type:"janusGetScreen",id:pending},"*")}}else if(window.navigator.userAgent.match("Firefox")){var ffver=parseInt(window.navigator.userAgent.match(/Firefox\/(.*)/)[1],10);if(ffver>=33){constraints={video:{mozMediaSource:"window",mediaSource:"window"},audio:isAudioSendEnabled(media)};getScreenMedia(constraints,function(err,stream){callbackUserMedia(err,stream);if(!err){var lastTime=stream.currentTime;var polly=window.setInterval(function(){if(!stream)window.clearInterval(polly);if(stream.currentTime==lastTime){window.clearInterval(polly);if(stream.onended){stream.onended()}}lastTime=stream.currentTime},500)}})}else{var error=new Error("NavigatorUserMediaError");error.name="Your version of Firefox does not support screen sharing, please install Firefox 33 (or more recent versions)";pluginHandle.consentDialog(false);callbacks.error(error);return}}window.addEventListener("message",function(event){if(event.origin!=window.location.origin)return;if(event.data.type=="janusGotScreen"&&cache[event.data.id]){var data=cache[event.data.id];var callback=data[0];delete cache[event.data.id];if(event.data.sourceId===""){var error=new Error("NavigatorUserMediaError");error.name="You cancelled the request for permission, giving up...";pluginHandle.consentDialog(false);callbacks.error(error)}else{constraints={audio:isAudioSendEnabled(media),video:{mandatory:{chromeMediaSource:"desktop",maxWidth:window.screen.width,maxHeight:window.screen.height,maxFrameRate:3},optional:[{googLeakyBucket:true},{googTemporalLayeredScreencast:true}]}};constraints.video.mandatory.chromeMediaSourceId=event.data.sourceId;getScreenMedia(constraints,callback)}}else if(event.data.type=="janusGetScreenPending"){window.clearTimeout(event.data.id)}})}}if(media.video!=="screen"){getUserMedia({audio:isAudioSendEnabled(media),video:videoSupport},function(stream){pluginHandle.consentDialog(false);streamsDone(handleId,jsep,media,callbacks,stream)},function(error){pluginHandle.consentDialog(false);callbacks.error(error)})}}else{streamsDone(handleId,jsep,media,callbacks)}}function prepareWebrtcPeer(handleId,callbacks){callbacks=callbacks||{};
callbacks.success=typeof callbacks.success=="function"?callbacks.success:jQuery.noop;callbacks.error=typeof callbacks.error=="function"?callbacks.error:webrtcError;var jsep=callbacks.jsep;var pluginHandle=pluginHandles[handleId];var config=pluginHandle.webrtcStuff;if(jsep!==undefined&&jsep!==null){if(config.pc===null){Janus.log("Wait, no PeerConnection?? if this is an answer, use createAnswer and not handleRemoteJsep");callbacks.error("No PeerConnection: if this is an answer, use createAnswer and not handleRemoteJsep");return}config.pc.setRemoteDescription(new RTCSessionDescription(jsep),function(){Janus.log("Remote description accepted!");callbacks.success()},callbacks.error)}else{callbacks.error("Invalid JSEP")}}function createOffer(handleId,media,callbacks){callbacks=callbacks||{};callbacks.success=typeof callbacks.success=="function"?callbacks.success:jQuery.noop;callbacks.error=typeof callbacks.error=="function"?callbacks.error:jQuery.noop;var pluginHandle=pluginHandles[handleId];var config=pluginHandle.webrtcStuff;Janus.log("Creating offer (iceDone="+config.iceDone+")");var mediaConstraints={mandatory:{OfferToReceiveAudio:isAudioRecvEnabled(media),OfferToReceiveVideo:isVideoRecvEnabled(media)}};Janus.log(mediaConstraints);config.pc.createOffer(function(offer){Janus.log(offer);if(config.mySdp===null||config.mySdp===undefined){Janus.log("Setting local description");config.mySdp=offer.sdp;config.pc.setLocalDescription(offer)}if(!config.iceDone&&!config.trickle){Janus.log("Waiting for all candidates...");return}if(config.sdpSent){Janus.log("Offer already sent, not sending it again");return}Janus.log("Offer ready");Janus.log(callbacks);config.sdpSent=true;callbacks.success(offer)},callbacks.error,mediaConstraints)}function createAnswer(handleId,media,callbacks){callbacks=callbacks||{};callbacks.success=typeof callbacks.success=="function"?callbacks.success:jQuery.noop;callbacks.error=typeof callbacks.error=="function"?callbacks.error:jQuery.noop;var pluginHandle=pluginHandles[handleId];var config=pluginHandle.webrtcStuff;Janus.log("Creating answer (iceDone="+config.iceDone+")");var mediaConstraints={mandatory:{OfferToReceiveAudio:isAudioRecvEnabled(media),OfferToReceiveVideo:isVideoRecvEnabled(media)}};Janus.log(mediaConstraints);config.pc.createAnswer(function(answer){Janus.log(answer);if(config.mySdp===null||config.mySdp===undefined){Janus.log("Setting local description");config.mySdp=answer.sdp;config.pc.setLocalDescription(answer)}if(!config.iceDone&&!config.trickle){Janus.log("Waiting for all candidates...");return}if(config.sdpSent){Janus.log("Answer already sent, not sending it again");return}config.sdpSent=true;callbacks.success(answer)},callbacks.error,mediaConstraints)}function sendSDP(handleId,callbacks){callbacks=callbacks||{};callbacks.success=typeof callbacks.success=="function"?callbacks.success:jQuery.noop;callbacks.error=typeof callbacks.error=="function"?callbacks.error:jQuery.noop;var pluginHandle=pluginHandles[handleId];var config=pluginHandle.webrtcStuff;Janus.log("Sending offer/answer SDP...");if(config.mySdp===null||config.mySdp===undefined){Janus.log("Local SDP instance is invalid, not sending anything...");return}config.mySdp=config.pc.localDescription;if(config.sdpSent){Janus.log("Offer/Answer SDP already sent, not sending it again");return}Janus.log(callbacks);config.sdpSent=true;callbacks.success(config.mySdp)}function getBitrate(handleId){var pluginHandle=pluginHandles[handleId];var config=pluginHandle.webrtcStuff;if(config.bitrate.value===undefined||config.bitrate.value===null)return"Feature unsupported by browser";return config.bitrate.value}function webrtcError(error){Janus.log("WebRTC error:");Janus.log(error)}function cleanupWebrtc(handleId){Janus.log("Cleaning WebRTC stuff");var pluginHandle=pluginHandles[handleId];var config=pluginHandle.webrtcStuff;if(config.bitrate.timer)clearInterval(config.bitrate.timer);config.bitrate.timer=null;config.bitrate.bsnow=null;config.bitrate.bsbefore=null;config.bitrate.tsnow=null;config.bitrate.tsbefore=null;config.bitrate.value=null;if(config.myStream!==null&&config.myStream!==undefined){Janus.log("Stopping local stream");config.myStream.stop()}config.myStream=null;try{config.pc.close()}catch(e){}config.pc=null;config.mySdp=null;config.iceDone=false;config.sdpSent=false;config.dataChannel=null;config.dtmfSender=null;pluginHandle.oncleanup()}function isAudioSendEnabled(media){Janus.log("isAudioSendEnabled:");Janus.log(media);if(media===undefined||media===null)return true;if(media.audio===false)return false;if(media.audioSend===undefined||media.audioSend===null)return true;return media.audioSend===true}function isAudioRecvEnabled(media){Janus.log("isAudioRecvEnabled:");Janus.log(media);if(media===undefined||media===null)return true;if(media.audio===false)return false;if(media.audioRecv===undefined||media.audioRecv===null)return true;return media.audioRecv===true}function isVideoSendEnabled(media){Janus.log("isVideoSendEnabled:");Janus.log(media);if(media===undefined||media===null)return true;if(media.video===false)return false;if(media.videoSend===undefined||media.videoSend===null)return true;return media.videoSend===true}function isVideoRecvEnabled(media){Janus.log("isVideoRecvEnabled:");Janus.log(media);if(media===undefined||media===null)return true;if(media.video===false)return false;if(media.videoRecv===undefined||media.videoRecv===null)return true;return media.videoRecv===true}function isDataEnabled(media){Janus.log("isDataEnabled:");Janus.log(media);if(media===undefined||media===null)return false;return media.data===true}function isTrickleEnabled(trickle){Janus.log("isTrickleEnabled:");Janus.log(trickle);if(trickle===undefined||trickle===null)return true;return trickle===true}}